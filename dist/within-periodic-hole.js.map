{"version":3,"sources":["within-periodic-hole.js"],"names":[],"mappings":"WAAU,IAAI,EAAE,OAAO,EAAE;AACvB;AACE;;AAEA;AACA;;AAEA;;EAEH,iBAAiB,oBAAoB,EAAE;AACtC;;2BAIA,UAA4B,KAAK,EAAE,cAAc,EAAE;AACjD,QAAI,UAAU,GAAG,cAAc,CAAC,MAAM,CAAC;AACvC,QAAI,SAAS,GAAG,cAAc,CAAC,UAAU,CAAC;AAC1C,QAAI,UAAU,GAAG,cAAc,CAAC,MAAM,CAAC;AACvC,QAAI,OAAO,GAAG,oBAAoB,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,GAAC,UAAU,CAAC,CAAC;;;AAG5E,QAAI,OAAO,GAAG,KAAK,GAAG,CAAC,EAAE;AACvB,aAAO,GAAG,OAAO,GAAG,UAAU,GAAG,UAAU,CAAC;KAC7C;;;;AAID,WAAO,OAAO,IAAI,KAAK,IAAI,AAAC,OAAO,GAAG,UAAU,GAAI,KAAK,CAAC;GAC3D;;;;;AAKD,SAAO,kBAAkB,CAAC;CAC3B,CAAC,CAAC","file":"within-periodic-hole.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['nearest-periodic-value'], factory);\n  } else if (typeof exports !== 'undefined') {\n    var nearestPeriodicValue = require('nearest-periodic-value');\n    module.exports = factory(nearestPeriodicValue);\n  } else {\n    root.withinPeriodicHole = factory(root.nearestPeriodicValue);\n  }\n})(this, function(nearestPeriodicValue) {\n  'use strict';\n\n  import nearestPeriodicValue from 'nearest-periodic-value';\n  \n  function withinPeriodicHole(point, holeDefinition) {\n    var holePeriod = holeDefinition.period;\n    var holeValue = holeDefinition.startValue;\n    var holeLength = holeDefinition.length;\n    var nearest = nearestPeriodicValue(point, holeValue, holePeriod+holeLength);\n  \n    // If the nearest is ahead of you, then move it back one period.\n    if (nearest - point > 0) {\n      nearest = nearest - holePeriod - holeLength;\n    }\n  \n    // Determine if we're inside the hole by comparing the start\n    // and end of the hole against our point\n    return nearest <= point && (nearest + holeLength) > point;\n  }\n  \n  export default withinPeriodicHole;\n  \n  \n  return withinPeriodicHole;\n});\n"],"sourceRoot":"/source/"}