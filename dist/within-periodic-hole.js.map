{"version":3,"sources":["within-periodic-hole.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,QAAQ,SAAS;AAC1B,SAAO,YAAY,YAAY,OAAO,WAAW,cAAc,OAAO,UAAU,QAAQ,QAAQ,6BAChG,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,CAAC,2BAA2B,WAChF,OAAO,qBAAqB,QAAQ,OAAO;GAC3C,MAAM,UAAU,sBAAsB;AAAE;;AAExC,WAAS,mBAAmB,OAAO,gBAAgB;AACjD,QAAI,aAAa,eAAe;AAChC,QAAI,YAAY,eAAe;AAC/B,QAAI,aAAa,eAAe;AAChC,QAAI,UAAU,qBAAqB,OAAO,WAAW,aAAW;;;AAGhE,QAAI,UAAU,QAAQ,GAAG;AACvB,gBAAU,UAAU,aAAa;;;;;AAKnC,WAAO,WAAW,SAAS,AAAC,UAAU,aAAc;;;AAGtD,MAAI,uBAAuB;;AAE3B,SAAO","file":"within-periodic-hole.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('nearest-periodic-value')) :\n  typeof define === 'function' && define.amd ? define(['nearest-periodic-value'], factory) :\n  global.withinPeriodicHole = factory(global.nearestPeriodicValue)\n}(this, function (nearestPeriodicValue) { 'use strict';\n\n  function withinPeriodicHole(point, holeDefinition) {\n    var holePeriod = holeDefinition.period;\n    var holeValue = holeDefinition.startValue;\n    var holeLength = holeDefinition.length;\n    var nearest = nearestPeriodicValue(point, holeValue, holePeriod+holeLength);\n\n    // If the nearest is ahead of you, then move it back one period.\n    if (nearest - point > 0) {\n      nearest = nearest - holePeriod - holeLength;\n    }\n\n    // Determine if we're inside the hole by comparing the start\n    // and end of the hole against our point\n    return nearest <= point && (nearest + holeLength) > point;\n  }\n\n  var within_periodic_hole = withinPeriodicHole;\n\n  return within_periodic_hole;\n\n}));\n"],"sourceRoot":"/source/"}